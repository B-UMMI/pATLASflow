// config to run pATLAS_mash_screen.nf script
manifest {
    author = "Tiago F. Jesus"
    description = "This Nextflow script is an implementation of mash-wrapper " +
        "for mash screen module. It will output a JSON file that can be " +
        "imported into pATLAS."
}

//manifest.mainScript = 'main.nf'

// default values for params
params {
    threads = 1
    kMer = 21
    pValue = 0.05
    identity = 0.9
    mash_distance = 0.1
    noWinner = false
    //bowtie2 unique options
    max_k = 1   // sets k parameter of bowtie2 -k, allowing the same read to map against more than 1 read. Default value is 1.
    reads = 'reads/*_{1,2}.fastq.gz' //this expects that fastq.gz files are in reads folder
    fasta = 'fasta/*.fas' //home/data
    plasmid_length_dict ='jsons/*_length.json'
    mash_screen = false  //boolean to run mash screen. By default it is true
    mapping = false     //boolean to check if mapping approach is enabled. By default it is false
    assembly = false    //boolean to run assembly based mash dist. By default it is set to false
    singleEnd = false
    help = false
    version = 0.1
}

process {
    $mashScreen.container = 'tiagofilipe12/patlasflow_mash_screen:1.0.0'
    $mashOutputJson.container = 'tiagofilipe12/patlasflow_mash_screen:1.0.0'
    $runMashDist.container = 'tiagofilipe12/patlasflow_mash_screen:1.0.0'
    $mashDistOutputJson.container = 'tiagofilipe12/patlasflow_mash_screen:1.0.0'
    $mappingBowtie.contained = 'tiagofilipe12/patlasflow_mapping:1.0.0'
}

// this should be passed with the -profile mash_screen
profiles {
    // standard uses executor local and docker
    standard {
        docker.enabled = true
    }
    singularity {
        singularity.enabled = true
    }
    // TODO make a profile for slurm
}